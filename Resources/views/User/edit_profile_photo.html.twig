{% extends "ChateaClientBundle::mainLayout.html.twig" %}

{% trans_default_domain 'UserRegistration' %}

{% block chatea_title %}{{ 'user.edit_profile_photo' | trans }}{% endblock %}
{% block chatea_meta_description %}{% endblock %}
{% block chatea_meta_keywords %}{% endblock %}

{% block chatea_body %}
    <h1>{{ 'user.edit_profile_photo' | trans }}</h1>

    <ol class="breadcrumb">
        <li><a href="{{ path('chatea_client_update_profile_index') }}">{{ 'user.change_profile' | trans }}</a></li>
        <li class="active">{{ 'user.edit_profile_photo' | trans }}</li>
    </ol>

    <div class="col-xs-10">
        <form id="profileForm" class="form-horizontal" method="POST">
            <div id="uploadSuccess" class="alert alert-success" style="display:none">
                {{ 'user.edit_profile_photo.success' | trans }}
            </div>
            <div class="well form-group">
{#                 <label class="col-lg-3 control-label">{{ "form.label.image" | trans }}</label>#}
                <div class="col-lg-9 btn btn-large">
                    {{ form_errors(form.image) }}
                    {{ form_widget(form.image) }}
                </div>
            </div>
            {{ form_rest(form) }}
            <div class="form-group row">
                <div class="col-sm-offset-10 col-sm-2">
                    <input name="register" type="submit" class="btn btn-lg pull-right btn-primary" value="{{ 'registration_profile.submit'|trans }}" />
                </div>
            </div>
        </form>
    </div>
{% endblock %}

{% block chatea_js %}
    {{ parent() }}
    <script>
        $(function(){
            // we need this variable becaus if we choose a file we habe to send data via FormData.
            // If we use FormData without choosing a file, we send an empnty image and therfore produce an error on the server
            var sendFile = false;
            var translations = {
                'The user already has a profile': '{{ 'user.allready_has_profile' | trans }}',
                'profile.gender.choice': '{{ 'user.profile.gender.choice.invalid' | trans }}',
                'profile.seeking.choice': '{{ 'user.profile.gender.seeking.invalid' | trans }}'
            };

            var trans = function(msg){
                var regex = /Files of ClientMimetype ([^\s]+\/[^s]+) or MimeType are not allowed./;
                if(typeof translations[msg] != 'undefined'){
                    return translations[msg];
                }else{
                    var invalidImage = '{{ 'user.image.invalid' | trans }}';
                    var test = regex.exec(msg);

                    if(test){
                        console.log(test);
                        return invalidImage.replace('%mimtype%', test[1]);
                    }
                }

                return msg;
            }

            $('#profileForm input[type=file]').on('change', function(){ //we have choosen a file
                sendFile = true;
            });

            $('#profileForm')
                    .submit( function( e ) {
                        var onSuccess = function(){
                           $('#uploadSuccess').show();
                        };

                        var assignProfilePhoto = function(responseJSON){
                            $.ajax( {
                                url: '{{ api_endpoint }}/api/users/{{ user.id }}/profile_photo?access_token={{ access_token }}',
                                type: 'PATCH',
                                data: { photo_id: responseJSON.id },
                                success: onSuccess,
                                error: onError
                            } );
                        };

                        var onError = function(xhr, error){
                            var responseJSON = xhr.responseJSON;
                            $('.help-validate').remove();

                            if(typeof responseJSON.errors != 'undefined'){
                                if(typeof responseJSON.errors === 'object') {
                                    for(field in responseJSON.errors){
                                        var $error = $('<span class="help-validate"><p class="alert-danger">'+ trans(responseJSON.errors[field].message) +'</p></span>');
                                        var $field = $('#social_profile_'+field);
                                        $error.insertBefore($field);
                                    }
                                }else {
                                    $('#form-errors')
                                            .empty()
                                            .append($('<ul><li>' + trans(responseJSON.errors) + '</li></ul>'))
                                            .show();
                                }
                            }
                        };

                        $('#uploadSuccess').hide();

                        if(sendFile){
                            var formData = new FormData( this );

                            $.ajax( {
                                url: '{{ api_endpoint }}/api/users/{{ user.id }}/photo?access_token={{ access_token }}',
                                type: 'POST',
                                data: formData,
                                processData: false,
                                contentType: false,
                                crossDomain: true,
                                success: assignProfilePhoto,
                                error: onError
                            } );
                        }else{
                            alert('Necesitas seleccionar una foto');
                        }

                        e.preventDefault();
                    });
        });
    </script>
{% endblock %}