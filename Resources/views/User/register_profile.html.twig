{% extends "ChateaClientBundle::mainLayout.html.twig" %}

{% trans_default_domain 'UserRegistration' %}

{% block chatea_title %}{{ 'user.register_profile' | trans }}{% endblock %}
{% block chatea_meta_description %}{% endblock %}
{% block chatea_meta_keywords %}{% endblock %}

{% block chatea_body %}
    {% if problem is not null %}
        <div class="alert alert-warning" role="alert">{{ problem | trans }}</div>
    {% endif %}

    <h1>{{ 'user.register_profile' | trans }}</h1>
    <div class="col-xs-12">
        <form id="profileForm" class="form-horizontal" action="{{ path('chatea_user_profile') }}" {{ form_enctype(form) }} method="POST">
            {% if alerts is not null %}
                <div id="form-errors" class="alert alert-warning">
                    {{ alerts }}
                </div>
            {% endif %}
            <div id="form-errors" class="alert alert-danger" style="display: none">

            </div>

            <div class="form-group">
                <label class="col-lg-3 control-label" for="user_profile_gender">{{ "form.label.gender" | trans }}</label>
                <div class="col-lg-9">
                    {{ form_errors(form.gender) }}
                    {{ form_widget(form.gender, {'attr': {'class': 'form-control' }, 'translation_domain' : 'UserRegistration' }) }}
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label" for="user_profile_seeking">{{ "form.label.seeking" | trans }}</label>
                <div class="col-lg-9">
                    {{ form_errors(form.seeking) }}
                    {{ form_widget(form.seeking, {'attr': {'class': 'form-control' }, 'translation_domain' : 'UserRegistration' }) }}
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label" for="user_profile_youWant">{{ "form.label.youWant" | trans }}</label>
                <div class="col-lg-9">
                    {{ form_errors(form.youWant) }}
                    {{ form_widget(form.youWant, {'attr': {'class': 'form-control', 'placeholder': 'form.placeholder.youWant' }, 'translation_domain' : 'UserRegistration' }) }}
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label" for="user_profile_about">{{ "form.label.about" | trans }}</label>
                <div class="col-lg-9">
                    {{ form_errors(form.about) }}
                    {{ form_widget(form.about, {'attr': {'class': 'form-control', 'placeholder': 'form.placeholder.about' }, 'translation_domain' : 'UserRegistration' }) }}
                </div>
            </div>
            <div class="form-group">
                <label class="col-lg-3 control-label">{{ "form.label.image" | trans }}</label>
                <div class="col-lg-9">
                    {{ form_errors(form.image) }}
                    {{ form_widget(form.image) }}
                    <br/>
                    <div class="alert alert-info">
                        <strong>Info!</strong> {% trans from "UserRegistration" %}upload.pictures.alert.sexual_content{% endtrans %}
                    </div>
                </div>
            </div>
            <div id="file-errors"></div>
            {{ form_widget(form._token) }}
            {{ form_rest(form) }}
            <div class="form-group row">
                {% if canSkip %}
                    <div class="col-sm-1">
                        <a id="skipBtn" class="btn btn-default" role="button" href="{{ path('chatea_client_register_user_success',{'userId': user.id }) }}">
                            {{ 'user.register_profile.skip' | trans }}
                        </a>
                    </div>

                {% endif %}
                <div class="col-sm-offset-9 col-sm-2">
                    <button id="btn_register" name="register" type="submit" class="btn btn-lg pull-right btn-primary">
                        <i id="icon_register" class=""></i>
                        {{ 'registration_profile.submit'|trans }}
                    </button>
                </div>
            </div>
        </form>
    </div>
{% endblock %}

{% block chatea_js %}
    {{ parent() }}
    <script>
        function sendEvent(category, action, label, value) {
            if (typeof ga !== 'undefined') {
                if(typeof value !== 'undefined') {
                    ga('send', 'event', category, action, label, value);
                }else {
                    ga('send', 'event', category, action, label);
                }
            }
        }

        $(function(){
            // we need this variable becaus if we choose a file we habe to send data via FormData.
            // If we use FormData without choosing a file, we send an empnty image and therfore produce an error on the server
            var sendFile = false;
            var translations = {
                'The user already has a profile': '{{ 'user.allready_has_profile' | trans }}',
                'profile.gender.choice': '{{ 'user.profile.gender.choice.invalid' | trans }}',
                'profile.seeking.choice': '{{ 'user.profile.gender.seeking.invalid' | trans }}',
                'profile.max_file_upload': '{{ 'user.profile.max_file_upload' | trans }}',
                'upload.error': '{{ 'user.upload_photo.error' | trans({}, 'UserChange') }}'
            };

            var trans = function(msg){
                var regex = /Files of ClientMimetype ([^\s]+\/[^s]+) or MimeType are not allowed./;
                if(typeof translations[msg] != 'undefined'){
                    return translations[msg];
                }else{
                    var invalidImage = '{{ 'user.image.invalid' | trans }}';
                    var test = regex.exec(msg);

                    if(test){
                        console.log(test);
                        return invalidImage.replace('%mimtype%', test[1]);
                    }
                }

                return msg;
            }

            $('#profileForm input[type=file]').on('change', function(){ //we have choosen a file
                sendEvent("registration", "profile", "send_photo");
                sendFile = true;
            });

            $("#skipBtn").click(function () {
                sendEvent("registration", "profile", "skip");
            });


            $('#social_profile_image').bind('change', function() {
                if(this.files[0].size > 1048576) {
                    $('#file-errors')
                            .empty()
                            .append($('<div class="alert alert-error" style="mragin-top:10px">'+trans("profile.max_file_upload")+'</div>'))
                            .show();
                    $("#btn_register").prop('disabled', true);
                } else {
                    $('#file-errors').empty();
                    $("#btn_register").prop('disabled', false);
                }
            });

            $('#profileForm')
                .submit( function( e ) {
                    $("#icon_register").addClass('icon-spinner icon-spin');
                    $("#btn_register").prop('disabled', true);


                    var onSuccess = function(){
                        if(sendFile){
                            window.location.href = '{{ path('chatea_client_register_user_success',{'userId': user.id , 'photoUploaded': 1}) }}';
                        }else{
                            window.location.href = '{{ path('chatea_client_register_user_success',{'userId': user.id }) }}';
                        }
                    };

                    var onError = function(xhr, error){
                        var responseJSON = xhr.responseJSON;
                        $('.help-validate').remove();


                        if(typeof responseJSON != 'undefined' && typeof responseJSON.errors != 'undefined'){
                            if(typeof responseJSON.errors === 'object') {
                                for(field in responseJSON.errors){
                                    var $error = $('<span class="help-validate"><p class="alert-danger">'+ trans(responseJSON.errors[field].message) +'</p></span>');
                                    var $field = $('#social_profile_'+field);
                                    $error.insertBefore($field);
                                }
                            }else {
                                $('#form-errors')
                                        .empty()
                                        .append($('<ul><li>' + trans(responseJSON.errors) + '</li></ul>'))
                                        .show();
                            }
                        }else{
                            var $error = $('<span class="help-validate"><p class="alert-danger">'+ trans('upload.error') +'</p></span>');
                            var $field = $('#social_profile_image');
                            $error.insertBefore($field);

                            $("#btn_register").prop('disabled', false);
                        }
                    };

                    if(sendFile){
                        var formData = new FormData( this );

                        $.ajax( {
                            url: '{{ api_endpoint }}/api/users/{{ user.id }}/profiles?access_token={{ access_token }}',
                            type: 'POST',
                            data: formData,
                            processData: false,
                            contentType: false,
                            crossDomain: true,
                            success: onSuccess,
                            error: onError
                        } );
                    }else{
                        //no file was choosen, we serialize the form in normal form
                        var formData = $('#profileForm').serialize();

                        $.ajax( {
                            url: '{{ api_endpoint }}/api/users/{{ user.id }}/profiles?access_token={{ access_token }}',
                            type: 'POST',
                            data: formData,
                            success: onSuccess,
                            error: onError
                        } );
                    }
                    sendEvent("registration", "profile", "compolete");
                    e.preventDefault();
                });

            {% if not canSkip %}
            {% include "ChateaClientBundle:User:register_profile_not_skip_script.html.twig" %}
            {% endif %}
        });
    </script>
{% endblock %}
